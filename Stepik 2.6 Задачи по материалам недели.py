'''Напишите программу, на вход которой подаётся прямоугольная матрица в виде последовательности строк,
заканчивающихся строкой, содержащей только строку "end" (без кавычек)Программа должна вывести
матрицу того же размера, у которой каждый элемент в позиции i, j равен сумме элементов первой
матрицы на позициях (i-1, j), (i+1, j), (i, j-1), (i, j+1). У крайних символов соседний
элемент находится с противоположной стороны матрицы.
В случае одной строки/столбца элемент сам себе является соседом по соответствующему направлению.'''


lst_1 = []
lst_2 = []
# Шаг 1 Ввод прямоугольной матрицы
while True:           # Создаём бесконечный цикл
    str_1 = input()   # Ввод строки
    if str_1 == 'end': # Условие для завершения ввода 'end'
        break          # Выход из цыкла
    str_2 = str_1.split() # разделяем строку по пробелам
    str_2 = [int(i) for i in str_2] # Интуем элементы строки
    lst_1.append(str_2)    # Добавляем разделённые и интованые элементы строки в список
# Условие: В случае одной строки/столбца элемент сам себе является соседом по соответствующему направлению.
if len((lst_1)) == 1 and len(str_2) == 1:
    a = lst_1[0][0] * 4
    print(a)
else:
# Одна строка и нсколько колонок
    if len((lst_1)) == 1:
        for i in range(len(lst_1)):
            for j in range(len(str_2)):
                a = lst_1[i][j] * 2 + lst_1[i][j - 1] + lst_1[i][j - len(str_2) + 1]
                lst_2.append(a)
# Одна колонка и несколько строк
    if len(str_2) == 1:
        for i in range(len(lst_1)):
            for j in range(len(str_2)):
                a = lst_1[i][j] * 2 + lst_1[i - 1][j] + lst_1[i - len(lst_1) + 1][j]
                lst_2.append(a)
# Несколько строк и несколько колонок
    for i in range(len(lst_1)):
        for j in range(len(str_2)):
            a = lst_1[i - 1][j] + lst_1[i - len(lst_1) + 1][j] + lst_1[i][j - 1] + lst_1[i][j - len(str_2) + 1]
            lst_2.append(a)
    n = len(str_2)
    i = 0
    while n <= len(str_2) * len(lst_1):
        print(*lst_2[i:n])
        i = n
        n += len(str_2)
